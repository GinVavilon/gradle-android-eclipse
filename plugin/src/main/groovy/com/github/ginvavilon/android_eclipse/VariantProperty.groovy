/**
 * 
 */
package com.github.ginvavilon.android_eclipse

/**
 * @author vbaraznovsky
 *
 */
class VariantProperty {

    static final String FILE = '.settings/com.github.ginvavilon.android_eclipse.pref'

    static final String VARIANT_STORE_KEY = 'variant'
    static final String VARIANT_ATTRIBUTE = 'variant'
    def project
    private String variant

    public VariantProperty(def project,def androidVariant) {
        this.project = project
        this.variant = androidVariant.name
    }

    public VariantProperty(def project) {
        this.project = project
        if (project.hasProperty(VARIANT_ATTRIBUTE)) {
            this.variant = project."$VARIANT_ATTRIBUTE"
        }
    }

    public String getVariant() {
        return variant;
    }

    public load(def defaultValue = this.variant) {
        Properties props = new Properties()
        File propsFile = new File(project.projectDir,FILE)
        this.variant=defaultValue
        if (propsFile.exists()){
            def inputStream = propsFile.newDataInputStream()
            try {
                props.load(inputStream)
                this.variant= props.getProperty(VARIANT_STORE_KEY, defaultValue);
            } finally{
                inputStream.close()
            }
        }
    }
    public selectOrLoad(def variants) {
        def variant = searchVariant(variants)
        if (variant == null) {
            if (this.variant) {
                println "Variant '${this.variant}' is not found in project $project."
            }
            load()
            variant=searchVariant(variants)
        }
        if (variant == null) {
            variant=variants[0]
        }
        return variant;
    }

    private searchVariant(variants) {
        return variants.find {it.name==this.variant}
    }

    public store() {
        Properties props = new Properties()
        File propsFile = new File(project.projectDir,FILE)

        if (!propsFile.exists()){
            propsFile.createNewFile()
        } else {
            def inputStream = propsFile.newDataInputStream()
            try {
                props.load(inputStream)
            } finally{
                inputStream.close()
            }
        }
        def oldVariant = props.getProperty(VARIANT_STORE_KEY)
        if (this.variant == oldVariant) {
            return
        }
        props.setProperty('variant', this.variant)
        def properiesWriter = new PrintWriter(propsFile.newWriter())
        try {
            props.store(properiesWriter, "Generated by gradle")
        } finally{
            properiesWriter.close()
        }
    }
}
