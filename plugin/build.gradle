final REPOSITORY_URL = 'https://github.com/GinVavilon/gradle-android-eclipse'
final VCS_URL = 'https://github.com/GinVavilon/gradle-android-eclipse.git'

final GROUP_ID = 'com.github.ginvavilon'
final ARTIFACT_ID = 'android-eclipse'
final VERSION = '0.8.0'

final DESCRIPTION = 'Plugin for generation files for eclipse in android project'
final NAME = 'Android-Eclipse'

buildscript {
    repositories {
       mavenCentral()
       jcenter()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.2.0.+'
    }
}
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.revwalk.RevWalk;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;

def getGitTag(){
    
    try{
    	FileRepositoryBuilder builder = new FileRepositoryBuilder();
    	Repository repository = builder.findGitDir(projectDir)
      		.readEnvironment()
      		.build();
     	Git git=Git.wrap(repository)
     	RevWalk walk = new RevWalk(repository);
     	def tagName = git.describe().call()
     	def tag = walk.parseTag(repository.getTags().get(tagName).objectId)
    	return tag
    } catch (e){
        return null
    }
}

def gitTag = getGitTag();




apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'nexus'
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:1.2.0'
}

configurations {
    mavenDeployer
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = GROUP_ID
        pom.artifactId = ARTIFACT_ID
        pom.version = VERSION
    }
}

modifyPom {
    project {
        name NAME
        description DESCRIPTION
        url REPOSITORY_URL
        inceptionYear '2016'

        scm {
            url REPOSITORY_URL
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'ginVavilon'
                name 'Vladimir Baraznovsky'
                email 'ginVavilon@gmail.com'
            }
        }
    }
}


publishing {
    publications {
            AndroidEclipsePublication(MavenPublication) {
                    from components.java
                    groupId GROUP_ID
                    artifactId ARTIFACT_ID
                    version VERSION
                    artifact sourcesJar 
                    artifact javadocJar
                    pom.withXml {
                	asNode().children().last() + {
                    	resolveStrategy = Closure.DELEGATE_FIRST
                        name NAME
        				description DESCRIPTION
        				url REPOSITORY_URL
                    	scm {
                        	 url REPOSITORY_URL
                    	}
                    	licenses {
                        	license {
                        	    name 'The Apache Software License, Version 2.0'
                            	url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            	distribution 'repo'
                        	}
                    	}
                    	developers {
                        	 developer {
             				 	id 'ginVavilon'
                			 	name 'Vladimir Baraznovsky'
                				email 'ginVavilon@gmail.com'
                        	}
                    	}
                	}
            	}
                    
            }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['AndroidEclipsePublication']
    pkg {
            repo = 'maven'
            name = NAME
            userOrg = user
            licenses = ['Apache-2.0']
            vcsUrl = VCS_URL
            labels = ['android', 'eclipse', 'gradle']
            publicDownloadNumbers = true
            publish = true
            version {
                    name = VERSION
                    desc = gitTag?.fullMessage
                    vcsTag = gitTag?.tagName
                    released = gitTag?.taggerIdent?.when?.format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
                    attributes = ['gradle-plugin': 'android-eclipse']
            }
    }
}
